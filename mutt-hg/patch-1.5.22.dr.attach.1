diff -r 1e935cab6f17 PATCHES
--- a/PATCHES	Wed Oct 23 11:20:24 2013 -0700
+++ b/PATCHES	Wed Oct 23 17:45:06 2013 -0400
@@ -0,0 +1,1 @@
+patch-1.5.21.dr.attach.1
diff -r 1e935cab6f17 globals.h
--- a/globals.h	Wed Oct 23 11:20:24 2013 -0700
+++ b/globals.h	Wed Oct 23 17:45:06 2013 -0400
@@ -34,6 +34,7 @@
 WHERE char *AliasFile;
 WHERE char *AliasFmt;
 WHERE char *AssumedCharset;
+WHERE char *AttachKeyword;
 WHERE char *AttachSep;
 WHERE char *Attribution;
 WHERE char *AttachCharset;
diff -r 1e935cab6f17 init.h
--- a/init.h	Wed Oct 23 11:20:24 2013 -0700
+++ b/init.h	Wed Oct 23 17:45:06 2013 -0400
@@ -83,6 +83,14 @@
 
 struct option_t MuttVars[] = {
   /*++*/
+  { "abort_noattach", DT_QUAD, R_NONE, OPT_ATTACH, MUTT_ASKYES },
+  /*
+  ** .pp
+  ** If set to \fIyes\fP, when composing messages containing the word
+  ** specified by $attach_keyword (default is "attach") and no attachments 
+  ** are given, composition will be aborted. If set to \fIno\fP, composing
+  ** messages as such will never be aborted.
+  */ 
   { "abort_nosubject",	DT_QUAD, R_NONE, OPT_SUBJECT, MUTT_ASKYES },
   /*
   ** .pp
@@ -241,6 +249,13 @@
   ** .pp
   ** For an explanation of ``soft-fill'', see the $$index_format documentation.
   */
+  { "attach_keyword",  DT_STR,  R_NONE, UL &AttachKeyword, UL "attach" },
+  /*
+  ** .pp
+  ** If $abort_attach is not set to no, then the body of the message
+  ** will be scanned for this keyword, and if found, you will be prompted
+  ** if there are no attachments. This is case insensitive.
+  */
   { "attach_sep",	DT_STR,	 R_NONE, UL &AttachSep, UL "\n" },
   /*
   ** .pp
diff -r 1e935cab6f17 mutt.h
--- a/mutt.h	Wed Oct 23 11:20:24 2013 -0700
+++ b/mutt.h	Wed Oct 23 17:45:06 2013 -0400
@@ -284,6 +284,8 @@
   OPT_SUBJECT,
   OPT_VERIFYSIG,      /* verify PGP signatures */
     
+  OPT_ATTACH, /* forgotten attachment detector */
+
   /* THIS MUST BE THE LAST VALUE. */
   OPT_MAX
 };
diff -r 1e935cab6f17 send.c
--- a/send.c	Wed Oct 23 11:20:24 2013 -0700
+++ b/send.c	Wed Oct 23 17:45:06 2013 -0400
@@ -1113,6 +1113,34 @@
 }
 
 int
+mutt_search_attach_keyword(char* filename)
+{
+  /* searches for the magic keyword "attach" within a file */
+  int found = 0;
+  char* inputline = malloc(1024);
+  char* lowerKeyword = malloc(strlen(AttachKeyword)+1);
+  FILE *attf = fopen(filename, "r");
+  int i;
+  for (i=0; i <= strlen(AttachKeyword); i++) {
+    lowerKeyword[i] = tolower(AttachKeyword[i]);
+  }
+  while (!feof(attf)) {
+    fgets(inputline, 1024, attf);
+    for (i=0; i < strlen(inputline); i++) {
+      inputline[i] = tolower(inputline[i]);
+    }
+    if (strstr(inputline, lowerKeyword)) {
+        found = 1;
+        break;
+    }
+  }
+  free(inputline);
+  free(lowerKeyword);
+  fclose(attf);
+  return found;
+}
+
+int
 ci_send_message (int flags,		/* send mode */
 		 HEADER *msg,		/* template to use for new message */
 		 char *tempfile,	/* file specified by -i or -H */
@@ -1612,6 +1640,21 @@
     goto main_loop;
   }
 
+  if (mutt_search_attach_keyword(msg->content->filename) && 
+         !msg->content->next && 
+         query_quadoption(OPT_ATTACH, _("No attachments, cancel sending?")) != MUTT_NO)
+  {
+    /* if the abort is automatic, print an error message */
+    if (quadoption (OPT_ATTACH) == MUTT_YES) {
+         char errorstr[512];
+         if (snprintf(errorstr, 512, 
+                       "Message contains magic keyword \"%s\", but no attachments. Not sending.", AttachKeyword)==-1)
+               errorstr[511] = 0; // terminate if need be. our string shouldnt be this long.
+      mutt_error _(errorstr);
+    }
+    goto main_loop;
+  }
+
   if (msg->content->next)
     msg->content = mutt_make_multipart (msg->content);
 
